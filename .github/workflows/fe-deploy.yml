name: Deploy JSP Frontend to AWS EC2

on:
  push:
    branches:
      - fe_deploy  # Trigger the workflow when changes are pushed to the main branch

jobs:
  deploy:
    runs-on: ubuntu-24.04

    steps:
      # Step 1: Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Step 2: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 3: Save EC2 private key to file
      - name: Save Private Key
        run: |
          echo "${{ secrets.FE_AWS_PRIVATE_KEY }}" > fe_private_key.pem
          chmod 600 fe_private_key.pem

      # Step 4: Add EC2 host to known hosts
      - name: Add EC2 Host to Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.FE_HOST }} >> ~/.ssh/known_hosts

      # Step 5: Set execute permissions for Maven Wrapper
      - name: Set Permissions for mvnw
        run: chmod +x ./mvnw

      # Step 6: Build the JSP application
      - name: Build Project
        run: ./mvnw clean package -DskipTests

      # Step 7: Deploy JSP files to Tomcat
      # Debug SSH Connection
      - name: Debug SSH Connection
        env:
          HOST: ${{ secrets.FE_HOST }}
          USER: ${{ secrets.USER }}
        run: ssh -i fe_private_key.pem $USER@$HOST echo "SSH connection successful"


      # Deploy to AWS EC2 
      - name: Deploy to AWS EC2
        env:
          HOST: ${{ secrets.FE_HOST }}
          USER: ${{ secrets.USER }}
        run: |
          # Copy the WAR file to the Tomcat webapps directory
          scp -o StrictHostKeyChecking=no -i fe_private_key.pem ./target/*.war $USER@$HOST:/opt/tomcat10/webapps/
      
          # Restart Tomcat to load the new deployment
          ssh -o StrictHostKeyChecking=no -i fe_private_key.pem $USER@$HOST << EOF
            sudo systemctl restart tomcat
          EOF
